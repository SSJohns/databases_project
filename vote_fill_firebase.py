from warnings import filterwarnings
#import MySQLdb as db
import sunlight
import os
from sunlight.pagination import PagingService
from firebase import firebase
import json

'''
Example Data
{
      "created": "2011-03-16T17:49:00",
      "id": 28927519,
      "option": {
        "id": 426366,
        "key": "+",
        "value": "Aye",
        "vote": 1
      },
      "person": {
        "bioguideid": "A000022",
        "birthday": "1942-11-19",
        "cspanid": 1002061,
        "firstname": "Gary",
        "gender": "male",
        "gender_label": "Male",
        "id": 400003,
        "lastname": "Ackerman",
        "link": "https://www.govtrack.us/congress/members/gary_ackerman/400003",
        "middlename": "L.",
        "name": "Rep. Gary Ackerman [D-NY5, 1993-2012]",
        "namemod": "",
        "nickname": "",
        "osid": "N00001143",
        "pvsid": "26970",
        "sortname": "Ackerman, Gary (Rep.) [D-NY5, 1993-2012]",
        "twitterid": null,
        "youtubeid": null
      },
      "person_role": {
        "caucus": null,
        "congress_numbers": [
          112
        ],
        "current": false,
        "description": "Representative for New York's 5th congressional district",
        "district": 5,
        "enddate": "2013-01-03",
        "extra": {
          "address": "2111 Rayburn HOB; Washington DC 20515-3205",
          "contact_form": "http://www.house.gov/writerep",
          "fax": "202-225-1589",
          "office": "2111 Rayburn House Office Building"
        },
        "id": 28,
        "leadership_title": null,
        "party": "Democrat",
        "person": 400003,
        "phone": "202-225-2601",
        "role_type": "representative",
        "role_type_label": "Representative",
        "senator_class": null,
        "senator_rank": null,
        "startdate": "2011-01-05",
        "state": "NY",
        "title": "Rep.",
        "title_long": "Representative",
        "website": "http://ackerman.house.gov/"
      },
      "vote": {
        "category": "amendment",
        "category_label": "Amendment",
        "chamber": "house",
        "chamber_label": "House",
        "congress": 112,
        "created": "2011-03-16T17:49:00",
        "id": 1,
        "link": "https://www.govtrack.us/congress/votes/112-2011/h183",
        "margin": 0.142857,
        "missing_data": true,
        "number": 183,
        "percent_plus": 0.423611,
        "question": "On Agreeing to the Amendment: Amendment 3 to H R 861",
        "question_details": null,
        "related_amendment": 95023,
        "related_bill": 75622,
        "required": "1/2",
        "result": "Failed",
        "session": "2011",
        "source": "house",
        "source_label": "house.gov",
        "total_minus": 244,
        "total_other": 5,
        "total_plus": 183,
        "vote_type": "On the Amendment"
      },
      "voter_type": "member",
      "voter_type_label": "Member of Congress",
      "voteview_extra_code": ""
    },
'''
#USER_DB = os.environ['USER_DB']
#PASS_DB = os.environ['PASS_DB']
# paging_service = PagingService(sunlight.congress)
firebase = firebase.FirebaseApplication('https://civis-site-generator.firebaseio.com', None)

# leg = paging_service.legislators(limit=1000)
import requests
params = {  "grant_type" : "client_credentials" }
r = requests.get('https://www.govtrack.us/api/v2/vote_voter?limit=6000').json()
# import ipdb; ipdb.set_trace()
#db_name = 'congress'
#con = db.connect(user=USER_DB, passwd=PASS_DB)
#cur = con.cursor()

# Create new database
# cur.execute('use congress;')
# for month in range(12, 0):
#     for day in range(30, 0):

types= ['h1',
'h10',
'h100',
'h101',
'h102',
'h103',
'h104',
'h105',
'h106',
'h107',
'h108',
'h109',
'h11',
'h110',
'h111',
'h112',
'h113',
'h114',
'h115',
'h116',
'h117',
'h118',
'h119',
'h12',
'h120',
'h121',
'h122',
'h123',
'h124',
'h125',
'h126',
'h127',
'h128',
'h129',
'h13',
'h130',
'h131',
'h132',
'h133',
'h134',
'h135',
'h136',
'h137',
'h138',
'h139',
'h14',
'h140',
'h141',
'h142',
'h143',
'h144',
'h145',
'h146',
'h147',
'h148',
'h149',
'h15',
'h150',
'h151',
'h152',
'h153',
'h154',
'h155',
'h156',
'h157',
'h158',
'h159',
'h16',
'h160',
'h161',
'h162',
'h163',
'h164',
'h165',
'h166',
'h167',
'h168',
'h169',
'h17',
'h170',
'h171',
'h172',
'h173',
'h174',
'h175',
'h176',
'h177',
'h178',
'h179',
'h18',
'h180',
'h181',
'h182',
'h183',
'h184',
'h185',
'h186',
'h187',
'h188',
'h189',
'h19',
'h190',
'h191',
'h192',
'h193',
'h194',
'h195',
'h196',
'h197',
'h198',
'h199',
'h2',
'h20',
'h200',
'h201',
'h202',
'h203',
'h204',
'h205',
'h206',
'h207',
'h208',
'h209',
'h21',
'h210',
'h211',
'h212',
'h213',
'h214',
'h215',
'h216',
'h217',
'h218',
'h219',
'h22',
'h220',
'h221',
'h222',
'h223',
'h224',
'h225',
'h226',
'h227',
'h228',
'h229',
'h23',
'h230',
'h231',
'h232',
'h233',
'h234',
'h235',
'h236',
'h237',
'h238',
'h239',
'h24',
'h240',
'h241',
'h242',
'h243',
'h244',
'h245',
'h246',
'h247',
'h248',
'h249',
'h25',
'h250',
'h251',
'h252',
'h253',
'h254',
'h255',
'h256',
'h257',
'h258',
'h259',
'h26',
'h260',
'h261',
'h262',
'h263',
'h264',
'h265',
'h266',
'h267',
'h268',
'h269',
'h27',
'h270',
'h271',
'h272',
'h273',
'h274',
'h275',
'h276',
'h277',
'h278',
'h279',
'h28',
'h280',
'h281',
'h282',
'h283',
'h284',
'h285',
'h286',
'h287',
'h288',
'h289',
'h29',
'h290',
'h291',
'h292',
'h293',
'h294',
'h295',
'h296',
'h297',
'h298',
'h299',
'h3',
'h30',
'h300',
'h301',
'h302',
'h303',
'h304',
'h305',
'h306',
'h307',
'h308',
'h309',
'h31',
'h310',
'h311',
'h312',
'h313',
'h314',
'h315',
'h316',
'h317',
'h318',
'h319',
'h32',
'h320',
'h321',
'h322',
'h323',
'h324',
'h325',
'h326',
'h327',
'h328',
'h329',
'h33',
'h330',
'h331',
'h332',
'h333',
'h334',
'h335',
'h336',
'h337',
'h338',
'h339',
'h34',
'h340',
'h341',
'h342',
'h343',
'h344',
'h345',
'h346',
'h347',
'h348',
'h349',
'h35',
'h350',
'h351',
'h352',
'h353',
'h354',
'h355',
'h356',
'h357',
'h358',
'h359',
'h36',
'h360',
'h361',
'h362',
'h363',
'h364',
'h365',
'h366',
'h367',
'h368',
'h369',
'h37',
'h370',
'h371',
'h372',
'h373',
'h374',
'h375',
'h376',
'h377',
'h378',
'h379',
'h38',
'h380',
'h381',
'h382',
'h383',
'h384',
'h385',
'h386',
'h387',
'h388',
'h389',
'h39',
'h390',
'h391',
'h392',
'h393',
'h394',
'h395',
'h396',
'h397',
'h398',
'h399',
'h4',
'h40',
'h400',
'h401',
'h402',
'h403',
'h404',
'h405',
'h406',
'h407',
'h408',
'h409',
'h41',
'h410',
'h411',
'h412',
'h413',
'h414',
'h415',
'h416',
'h417',
'h418',
'h419',
'h42',
'h420',
'h421',
'h422',
'h423',
'h424',
'h425',
'h426',
'h427',
'h428',
'h429',
'h43',
'h430',
'h431',
'h432',
'h433',
'h434',
'h435',
'h436',
'h437',
'h438',
'h439',
'h440',
'h441',
'h442',
'h443',
'h444',
'h445',
'h446',
'h447',
'h448',
'h449',
'h45',
'h450',
'h451',
'h452',
'h453',
'h454',
'h455',
'h456',
'h457',
'h458',
'h459',
'h46',
'h460',
'h461',
'h462',
'h463',
'h464',
'h465',
'h466',
'h467',
'h468',
'h469',
'h47',
'h470',
'h471',
'h472',
'h473',
'h474',
'h475',
'h476',
'h477',
'h478',
'h479',
'h48',
'h480',
'h481',
'h482',
'h483',
'h484',
'h485',
'h486',
'h487',
'h488',
'h489',
'h49',
'h490',
'h491',
'h492',
'h493',
'h494',
'h495',
'h496',
'h497',
'h498',
'h499',
'h5',
'h50',
'h500',
'h501',
'h502',
'h503',
'h504',
'h505',
'h506',
'h507',
'h508',
'h509',
'h51',
'h510',
'h511',
'h512',
'h513',
'h514',
'h515',
'h516',
'h517',
'h518',
'h519',
'h52',
'h520',
'h521',
'h522',
'h523',
'h524',
'h525',
'h526',
'h527',
'h528',
'h529',
'h53',
'h530',
'h531',
'h532',
'h533',
'h534',
'h535',
'h536',
'h537',
'h538',
'h539',
'h54',
'h540',
'h541',
'h542',
'h543',
'h544',
'h545',
'h546',
'h547',
'h548',
'h549',
'h55',
'h550',
'h551',
'h552',
'h553',
'h554',
'h555',
'h556',
'h557',
'h558',
'h559',
'h56',
'h560',
'h561',
'h562',
'h563',
'h564',
'h565',
'h566',
'h567',
'h568',
'h569',
'h57',
'h570',
'h571',
'h572',
'h573',
'h574',
'h575',
'h576',
'h577',
'h578',
'h579',
'h58',
'h580',
'h581',
'h582',
'h583',
'h584',
'h585',
'h586',
'h587',
'h588',
'h589',
'h59',
'h590',
'h591',
'h592',
'h593',
'h594',
'h595',
'h596',
'h597',
'h598',
'h599',
'h6',
'h60',
'h600',
'h601',
'h602',
'h603',
'h604',
'h605',
'h606',
'h607',
'h608',
'h609',
'h61',
'h610',
'h611',
'h612',
'h613',
'h614',
'h615',
'h616',
'h617',
'h618',
'h619',
'h62',
'h620',
'h621',
'h622',
'h63',
'h64',
'h65',
'h66',
'h67',
'h68',
'h69',
'h7',
'h70',
'h71',
'h72',
'h73',
'h74',
'h75',
'h76',
'h77',
'h78',
'h79',
'h8',
'h80',
'h81',
'h82',
'h83',
'h84',
'h85',
'h86',
'h87',
'h88',
'h89',
'h9',
'h90',
'h91',
'h92',
'h93',
'h94',
'h95',
'h96',
'h97',
'h98',
'h99']

import time


while True:
    curr = list(types)
    try:
        time.sleep(5)
        for i, _type in enumerate(curr):
            r = requests.get('https://www.govtrack.us/data/congress/114/votes/2016/'+_type+'/data.json').json()
            if 'Nay' not in r['votes']:
                continue
            # import ipdb; ipdb.set_trace()
            for leg_i in r['votes']['Nay']:
                # import ipdb; ipdb.set_trace()
                val = r['vote_id'].split('-')[0]
                firebase.post('/votes/'+str(val), data={"vote":"Nay", "display_name": leg_i['display_name'], "id": leg_i['id'], "party": leg_i['party'] })
            for leg_i in r['votes']['Yea']:
                # import ipdb; ipdb.set_trace()
                val = r['vote_id'].split('-')[0]
                firebase.post('/votes/'+str(val), data={"vote":"Yea", "display_name": leg_i['display_name'], "id": leg_i['id'], "party": leg_i['party'] })
            for leg_i in r['votes']['Not Voting']:
                # import ipdb; ipdb.set_trace()
                val = r['vote_id'].split('-')[0]
                firebase.post('/votes/'+str(val), data={"vote":"Not Voting", "display_name": leg_i['display_name'], "id": leg_i['id'], "party": leg_i['party'] })

            del types[i]
    except Exception as e:
        print(e)
